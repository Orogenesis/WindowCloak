name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  XCODE_VERSION: '15.0'
  PROJECT_NAME: WindowCloak
  SCHEME: WindowCloak
  CONFIGURATION: Release

jobs:
  build:
    name: Build and Release
    runs-on: macos-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Cache Xcode derived data
        uses: actions/cache@v4
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-deriveddata-${{ hashFiles('**/*.xcodeproj/**', '**/*.swift') }}
          restore-keys: |
            ${{ runner.os }}-deriveddata-

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Build Release
        run: |
          xcodebuild \
            -scheme ${{ env.SCHEME }} \
            -configuration ${{ env.CONFIGURATION }} \
            -derivedDataPath ./build \
            clean build \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO

      - name: Locate built app
        id: locate
        run: |
          APP_PATH=$(find ./build -name "${{ env.PROJECT_NAME }}.app" -type d | head -n 1)
          echo "app_path=$APP_PATH" >> $GITHUB_OUTPUT
          echo "Found app at: $APP_PATH"

      - name: Ad-hoc sign app bundle
        run: |
          codesign --force --deep --options=runtime --sign - "${{ steps.locate.outputs.app_path }}"
          codesign --verify --deep --strict "${{ steps.locate.outputs.app_path }}"

      - name: Create DMG
        id: create_dmg
        run: |
          DMG_NAME="${{ env.PROJECT_NAME }}-${{ steps.version.outputs.version }}-macos.dmg"

          mkdir -p dmg_temp
          cp -R "${{ steps.locate.outputs.app_path }}" dmg_temp/

          # Create Applications symlink.
          ln -s /Applications dmg_temp/Applications

          # Create DMG.
          hdiutil create -volname "${{ env.PROJECT_NAME }}" \
            -srcfolder dmg_temp \
            -ov -format UDZO \
            "$DMG_NAME"

          echo "dmg_name=$DMG_NAME" >> $GITHUB_OUTPUT
          echo "dmg_path=$(pwd)/$DMG_NAME" >> $GITHUB_OUTPUT

      - name: Create ZIP archive
        id: create_zip
        run: |
          ZIP_NAME="${{ env.PROJECT_NAME }}-${{ steps.version.outputs.version }}-macos.zip"

          cd $(dirname "${{ steps.locate.outputs.app_path }}")
          zip -r "$OLDPWD/$ZIP_NAME" "${{ env.PROJECT_NAME }}.app"
          cd "$OLDPWD"

          echo "zip_name=$ZIP_NAME" >> $GITHUB_OUTPUT
          echo "zip_path=$(pwd)/$ZIP_NAME" >> $GITHUB_OUTPUT

      - name: Generate checksums
        id: checksums
        run: |
          shasum -a 256 "${{ steps.create_dmg.outputs.dmg_name }}" > checksums.txt
          shasum -a 256 "${{ steps.create_zip.outputs.zip_name }}" >> checksums.txt
          cat checksums.txt

      - name: Generate release notes
        id: release_notes
        run: |
          cat > release_notes.md << 'EOF'
          ## Installation

          ### Option 1: DMG (Recommended)
          1. Download `${{ steps.create_dmg.outputs.dmg_name }}`
          2. Open the DMG file
          3. Drag WindowCloak to your Applications folder
          4. Launch from Applications

          ### Option 2: ZIP
          1. Download `${{ steps.create_zip.outputs.zip_name }}`
          2. Extract the ZIP file
          3. Move WindowCloak.app to your Applications folder
          4. Launch from Applications

          ## First Launch

          Because the app isn't signed with a Developer ID certificate, macOS marks it as coming from the internet. Unblock it via one of the following:

          - Run `xattr -dr com.apple.quarantine /Applications/WindowCloak.app` after copying it to Applications.
          - Or open **System Settings → Privacy & Security** and click **Open Anyway** next to the WindowCloak warning.

          After you unblock it once, the app will launch normally.

          ## Requirements

          - macOS 12.3 (Monterey) or later
          - Screen Recording permission (will be requested on first launch)

          ## Checksums

          ```
          $(cat checksums.txt)
          ```

          ---

          Built with ❤️ for privacy-conscious developers.
          EOF

          cat release_notes.md
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: WindowCloak v${{ steps.version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, 'alpha') || contains(steps.version.outputs.version, 'beta') || contains(steps.version.outputs.version, 'rc') }}
          files: |
            ${{ steps.create_dmg.outputs.dmg_path }}
            ${{ steps.create_zip.outputs.zip_path }}
            checksums.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-artifacts-${{ steps.version.outputs.version }}
          path: |
            ${{ steps.create_dmg.outputs.dmg_path }}
            ${{ steps.create_zip.outputs.zip_path }}
            checksums.txt
          retention-days: 90
